# Path to Linux kernel source. Prior to running a "cut_X" script, the kernel
# should be built, with modules installed (or symlinked) under
# /lib/modules/<kernel_version>
#
# e.g. KERNEL_SRC="/home/me/linux"
KERNEL_SRC=""

# If specified, this parameter defines the path that Dracut should use to
# obtain compiled kernel modules. If left blank, Dracut will use its default
# (e.g. /lib/modules) search path.
# A value of "${KERNEL_SRC}/mods" makes sense when used alongside
# "INSTALL_MOD_PATH=./mods make modules_install" during kernel compilation.
KERNEL_INSTALL_MOD_PATH="${KERNEL_SRC}/mods"

# bridge device provisioned by br_setup.sh
# e.g. BR_DEV="br0"
BR_DEV="br0"

# If specified, a physical network interface to be connected to the bridge.
# This should only be necessary if you wish to connect to the rapido VMs from a
# remote host.
# e.g. BR_IF="eth0"
#BR_IF=""

# if specified, an address to configure for the bridge device
BR_ADDR="192.168.155.1/24"

# if specified, start a dhcp server, listening on $BR_DEV
# e.g. BR_DHCP_SRV_RANGE="192.168.155.10,192.168.155.20,12h"
#BR_DHCP_SRV_RANGE=""

# Tap VM network device owner
# e.g. TAP_USER="me"
TAP_USER=""

# extra qemu-kvm arguments to append for both VMs:
# "-nographic" sees the emulated serial port redirected to the invoking console.
# "-display none -daemonize" can be used to run VMs in the background, without
# redirection.
#
# e.g. QEMU_EXTRA_ARGS="-nographic -drive file=/dev/sdz,if=virtio,cache=none,format=raw,index=0"
# e.g. QEMU_EXTRA_ARGS="-nographic -gdb tcp::1234"
QEMU_EXTRA_ARGS="-nographic"

# extra dracut args, e.g. "--debug"
#DRACUT_EXTRA_ARGS=""

# Directory with dracut source code.
# Use e.g. to work with upstream dracut or a git repo
# This implies "--local" switch for dracut
# Default is unset (i.e. use system dracut)
#DRACUT_SRC=""

# kernel modules or files for which dynamic debug should be enabled
# e.g. DYN_DEBUG_MODULES="rbd libceph"
# e.g. DYN_DEBUG_FILES="drivers/block/rbd.c"
#DYN_DEBUG_MODULES=""
#DYN_DEBUG_FILES=""

######### First VM #########
# Tap tunnel interface provisioned by br_setup.sh, and used by vm.sh
TAP_DEV0="tap0"

# MAC address assigned to the VM
# e.g. MAC_ADDR1="b8:ac:24:45:c5:01"
MAC_ADDR1=""

# When set to "1", use DHCP to obtain IP and hostname.
#IP_ADDR1_DHCP="1"

# IP address assigned to the VM during boot
IP_ADDR1="192.168.155.101"

# Static hostname assigned to the VM
HOSTNAME1="rapido1"
#############################

######### Second VM #########
# Tap tunnel interface provisioned by br_setup.sh, and used by vm.sh
TAP_DEV1="tap1"

# MAC address assigned to the VM
# e.g. MAC_ADDR2="b8:ac:24:45:c5:02"
MAC_ADDR2=""

# When set to "1", use DHCP to obtain IP and hostname.
#IP_ADDR2_DHCP="1"

# Static IP address assigned to the VM during boot
IP_ADDR2="192.168.155.102"

# Static hostname assigned to the VM
HOSTNAME2="rapido2"
#############################

##### Ceph globals #####
# CEPH_SRC should correspond to a checkout and build of the Ceph source
# available at https://github.com/ceph/ceph. Only required if a Ceph specific
# Cut script will be run. vstart.sh should be run prior to Cut.
# If not specified, then the Ceph config, keyring and binaries will be obtained
# from the local system.
#
# e.g. CEPH_SRC="/home/me/ceph"
CEPH_SRC=""

# user for Ceph authentication. Secret obtained from keyring file.
# The default "admin" user is created by vstart.sh.
CEPH_USER="admin"

# monitor name used to obtain the mon_addr from ceph.conf [mon.$name], otherwise
# fallback to mon_host in the [global] section. The default below corresponds to
# the first vstart.sh deployed monitor.
CEPH_MON_NAME="a"

# The RBD pool and image to expose via LIO/tcmu iSCSI, loopback fabric, or for
# rbd_autorun.sh to map as a local device. This image must be created prior
# to booting the test VM.
CEPH_RBD_POOL="rbd"
CEPH_RBD_IMAGE="iscsi_test"
CEPH_RBD_IMAGE_MB="4096"
###########################

##### multipath globals #####
# Path to a directory containing multipath-tools sources.
# Use for testing multipath-tools.
# It's assumed that you've run "make" in this directory already.
# MULTIPATH_SRC="/path/to/multipath-tools"

# Flags for running "make install" for multipath-tools
# This is only used if MULTIPATH_SRC is set, e.g.:
# MULTIPATH_MAKEFLAGS="usr_prefix=/usr ENABLE_LIBDMMP=0"

####### lio_local_autorun, lio_rbd_autorun and rbd_autorun #######
# IQN for the iSCSI target configured by lio_*_autorun.sh
TARGET_IQN="iqn.2003-01.org.linux-iscsi:rapido"

# List of initiator IQNs granted full access to the lio_*_autorun.sh iSCSI
# target. Defaults below correspond to the libiscsi test utility.
INITIATOR_IQNS="iqn.2007-10.com.github:sahlberg:libiscsi:iscsi-test \
		iqn.2007-10.com.github:sahlberg:libiscsi:iscsi-test-2"
###########################

####### fstests_*_autorun.sh #######
# If defined, run the following command from within the fstests source directory
# following VM boot-up.
# e.g. FSTESTS_AUTORUN_CMD="./check -g auto && shutdown"
#FSTESTS_AUTORUN_CMD=""
#################################

######## fstests_cifs_autorun.sh ########
# SMB/CIFS server and authentication details, used to mount the test share.
# e.g. CIFS_SERVER="smbserver.example.com"
#CIFS_SERVER=""
# e.g. CIFS_SHARE="myshare"
#CIFS_SHARE=""
# e.g. CIFS_DOMAIN="EXAMPLE"
#CIFS_DOMAIN=""
# e.g. CIFS_USER="me"
#CIFS_USER=""
# e.g. CIFS_PW="password"
#CIFS_PW=""
# e.g. CIFS_MOUNT_OPTS="vers=3.0"
#CIFS_MOUNT_OPTS=""
#################################

######## cut_fstests_*.sh #########
# FSTESTS_SRC should correspond to a checkout and build of the xfstests source
# available at https://git.kernel.org/pub/scm/fs/xfs/xfstests-dev.git
# e.g. FSTESTS_SRC="/home/me/xfstests-dev"
#FSTESTS_SRC=""
##################################

####### blktests_*_autorun.sh #######
# If defined, run the following command from within the blktests source directory
# following VM boot-up.
# e.g. BLKTESTS_AUTORUN_CMD="./check && shutdown"
#BLKTESTS_AUTORUN_CMD=""
#################################

######## cut_blktests_*.sh #########
# BLKTESTS_SRC should correspond to a checkout and build of the blktests source
# available at https://github.com/osandov/blktests.git
# e.g. BLKTESTS_SRC="/home/me/blktests"
#BLKTESTS_SRC=""
##################################

######## cut_usb_rbd.sh #########
# RBD_USB_SRC should correspond to a checkout and build of
# https://github.com/ddiss/rbd-usb.
# e.g. RBD_USB_SRC="/home/me/rbd-usb"
#RBD_USB_SRC=""
#################################

######## cut_tcmu_*.sh ########
# TCMU_RUNNER_SRC should correspond to a checkout and build of
# https://github.com/open-iscsi/tcmu-runner
# e.g. TCMU_RUNNER_SRC="/home/me/tcmu-runner"
#TCMU_RUNNER_SRC=""
#################################

###### dropbear_autorun.sh ######
# public ssh key to add to Dropbear's authorized_keys file
#SSH_AUTHORIZED_KEY=""
#################################
