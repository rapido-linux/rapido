# Path to Linux kernel source. Prior to running "rapido cut", the kernel
# should be built, with modules installed (see KERNEL_INSTALL_MOD_PATH below).
#
# e.g. KERNEL_SRC="/home/me/linux"
KERNEL_SRC=""

# If specified, this parameter defines the path that Dracut should use to
# obtain compiled kernel modules. If left blank, Dracut will use its default
# (e.g. /lib/modules) search path.
# A value of "${KERNEL_SRC}/mods" makes sense when used alongside
# "INSTALL_MOD_PATH=./mods make modules_install" during kernel compilation.
KERNEL_INSTALL_MOD_PATH="${KERNEL_SRC}/mods"

# bridge device provisioned by "rapido setup-network" (br_setup.sh).
BR1_DEV="rapido-br"

# If specified, a physical network interface to be connected to the bridge.
# This should only be necessary if you wish to connect to the rapido VMs from a
# remote host.
# e.g. BR1_IF="eth0"
#BR1_IF=""

# if specified, an address to configure for the bridge device
BR1_ADDR="192.168.155.1/24"

# if specified, start a dhcp server, listening on $BR1_DEV
# e.g. BR1_DHCP_SRV_RANGE="192.168.155.10,192.168.155.20,12h"
#BR1_DHCP_SRV_RANGE=""

# Tap VM network device owner
# e.g. TAP_USER="me"
TAP_USER=""

# If specified, share this path with the guest via virtfs. It will be mounted
# at boot time by the VM under /host.
# e.g. VIRTFS_SHARE_PATH="/tmp/rapido/"
#VIRTFS_SHARE_PATH=""

# extra qemu-kvm arguments to append for both VMs:
# "-nographic" sees the emulated serial port redirected to the invoking console.
# "-display none -daemonize" can be used to run VMs in the background, without
# redirection.
# "-device virtio-rng-pci" sees the guest make use of /dev/random on the
# hypervisor for random number generation.
#
# e.g. QEMU_EXTRA_ARGS="-nographic -drive file=/dev/sdz,if=virtio,cache=none,format=raw,index=0"
# e.g. QEMU_EXTRA_ARGS="-nographic -device virtio-rng-pci -gdb tcp:127.0.0.1:1234"
QEMU_EXTRA_ARGS="-nographic -device virtio-rng-pci"

# extra kernel boot parameters, passed via QEMU -append
# e.g. QEMU_EXTRA_KERNEL_PARAMS="loglevel=0"
#QEMU_EXTRA_KERNEL_PARAMS=""

# extra dracut args, e.g. "--debug --nostrip"
#DRACUT_EXTRA_ARGS=""

# Directory with dracut source code.
# Use e.g. to work with upstream dracut or a git repo
# This implies "--local" switch for dracut
# Default is unset (i.e. use system dracut)
#DRACUT_SRC=""

# kernel modules or files for which dynamic debug should be enabled
# e.g. DYN_DEBUG_MODULES="rbd libceph"
# e.g. DYN_DEBUG_FILES="drivers/block/rbd.c"
#DYN_DEBUG_MODULES=""
#DYN_DEBUG_FILES=""

######### First VM #########
# Tap tunnel interface provisioned by br_setup.sh, and used by vm.sh
TAP_DEV0="tap0"

# MAC address assigned to the VM
# e.g. VM1_MAC_ADDR1="b8:ac:24:45:c5:01"
VM1_MAC_ADDR1=""

# When set to "1", use DHCP to obtain IP and hostname.
#VM1_IP_ADDR1_DHCP="1"

# IP address assigned to the VM during boot
VM1_IP_ADDR1="192.168.155.101"

# Static hostname assigned to the VM
VM1_HOSTNAME="rapido1"
#############################

######### Second VM #########
# Tap tunnel interface provisioned by br_setup.sh, and used by vm.sh
TAP_DEV1="tap1"

# MAC address assigned to the VM
# e.g. VM2_MAC_ADDR1="b8:ac:24:45:c5:02"
VM2_MAC_ADDR1=""

# When set to "1", use DHCP to obtain IP and hostname.
#VM2_IP_ADDR1_DHCP="1"

# Static IP address assigned to the VM during boot
VM2_IP_ADDR1="192.168.155.102"

# Static hostname assigned to the VM
VM2_HOSTNAME="rapido2"
#############################

##### Ceph globals #####
# CEPH_SRC should correspond to a checkout and build of the Ceph source
# available at https://github.com/ceph/ceph. Only required if a Ceph specific
# Cut script will be run. vstart.sh should be run prior to Cut.
# If not specified, then the Ceph config, keyring and binaries will be obtained
# from the local system.
#
# e.g. CEPH_SRC="/home/me/ceph"
CEPH_SRC=""

# user for Ceph authentication. Secret obtained from keyring file.
# The default "admin" user is created by vstart.sh.
CEPH_USER="admin"

# monitor name used to obtain the mon_addr from ceph.conf [mon.$name], otherwise
# fallback to mon_host in the [global] section. The default below corresponds to
# the first vstart.sh deployed monitor.
CEPH_MON_NAME="a"

# The RBD pool and image to expose via LIO/tcmu iSCSI, loopback fabric, or for
# autorun/rbd.sh to map as a local device. This image must be created prior
# to booting the test VM.
CEPH_RBD_POOL="rbd"
CEPH_RBD_IMAGE="rapido_rbd"
CEPH_RBD_IMAGE_MB="4096"
###########################

####### autorun/lio_*.sh and autorun/tgt_local.sh #######
# IQN to use for the iSCSI target
TARGET_IQN="iqn.2003-01.org.linux-iscsi:rapido"

# List of initiator IQNs granted full access to the iSCSI target. Defaults below
# correspond to the libiscsi test utility.
INITIATOR_IQNS="iqn.2007-10.com.github:sahlberg:libiscsi:iscsi-test \
		iqn.2007-10.com.github:sahlberg:libiscsi:iscsi-test-2"
###########################

####### autorun/fstests_*.sh #######
# If defined, run the following command from within the fstests source directory
# following VM boot-up.
# e.g. FSTESTS_AUTORUN_CMD="./check -g auto && shutdown"
#FSTESTS_AUTORUN_CMD=""
#################################

##### cut/fstests_btrfs.sh ######
# If BTRFS_PROGS_SRC is set, then use (prebuilt) btrfs-progs binaries from this
# path instead of from the local system.
# e.g. BTRFS_PROGS_SRC="/home/me/btrfs-progs"
#BTRFS_PROGS_SRC=""
#################################

## autorun/fstests_cifs.sh and autorun/samba_*.sh ##
# SMB server and mount options for cifs.ko
# e.g. CIFS_SERVER="smbserver.example.com"
#CIFS_SERVER=""
# e.g. CIFS_MOUNT_OPTS="vers=3.0"
#CIFS_MOUNT_OPTS=""
#
# SMB/CIFS share and authentication details, used for cifs.ko mounts and Samba
# share configuration.
# e.g. CIFS_SHARE="myshare"
#CIFS_SHARE=""
# e.g. CIFS_DOMAIN="EXAMPLE"
#CIFS_DOMAIN=""
# e.g. CIFS_USER="me"
#CIFS_USER=""
# e.g. CIFS_PW="password"
#CIFS_PW=""
####################################################

######## fstests_*.sh #########
# FSTESTS_SRC should correspond to a checkout and build of the xfstests source
# available at https://git.kernel.org/pub/scm/fs/xfs/xfstests-dev.git
# e.g. FSTESTS_SRC="/home/me/xfstests-dev"
#FSTESTS_SRC=""
# If defined, fstests_xfs.sh and fstests_btrfs.sh will provision zram devices
# with FSTESTS_ZRAM_SIZE disksize, instead of the default "1G".
# e.g. FSTESTS_ZRAM_SIZE="2G"
#FSTESTS_ZRAM_SIZE=""
##################################

####### autorun/blktests_*.sh #######
# If defined, run the following command from within the blktests source directory
# following VM boot-up.
# e.g. BLKTESTS_AUTORUN_CMD="./check && shutdown"
#BLKTESTS_AUTORUN_CMD=""
#################################

######## cut/blktests_*.sh #########
# BLKTESTS_SRC should correspond to a checkout and build of the blktests source
# available at https://github.com/osandov/blktests.git
# e.g. BLKTESTS_SRC="/home/me/blktests"
#BLKTESTS_SRC=""
##################################

####### autorun/zonefstests_*.sh #######
# If defined, run the following command from within the zonefstests source directory
# following VM boot-up.
# e.g. ZONEFSTESTS_AUTORUN_CMD="./zonefs-tests.sh /dev/nullb0 && shutdown"
#ZONEFSTESTS_AUTORUN_CMD=""
#################################

######## cut/zonefstests_*.sh #########
# ZONEFSTOOLS_SRC should correspond to a checkout and build of the
# zonefs-tools source available at https://github.com/damien-lemoal/zonefs-tools.git
# e.g. ZONEFSTOOLS_SRC="/home/me/zonefs-tools"
##################################

######## cut/usb_rbd.sh #########
# RBD_USB_SRC should correspond to a checkout and build of
# https://github.com/ddiss/rbd-usb.
# e.g. RBD_USB_SRC="/home/me/rbd-usb"
#RBD_USB_SRC=""
#################################

######## cut/tcmu_*.sh ########
# TCMU_RUNNER_SRC should correspond to a checkout and build of
# https://github.com/open-iscsi/tcmu-runner
# e.g. TCMU_RUNNER_SRC="/home/me/tcmu-runner"
#TCMU_RUNNER_SRC=""
#################################

###### autorun/dropbear.sh ######
# public ssh key to add to Dropbear's authorized_keys file
#SSH_AUTHORIZED_KEY=""
#################################

######### cut/samba_*.sh ########
# SAMBA_SRC should correspond to a checkout and build of Samba.
# e.g. SAMBA_SRC="/home/me/samba"
#SAMBA_SRC=""
#################################

########## cut/lrbd.sh #########
# These should all correspond to checked-out source repositories
#LRBD_SRC=""
#TARGETCLI_SRC=""
#RTSLIB_SRC=""
#CONFIGSHELL_SRC=""
################################

########## openiscsi ###########
# OPENISCSI_SRC should correspond to a checkout and build of open-iscsi
#OPENISCSI_SRC=""
# autorun/openiscsi.sh uses the first entry in INITIATOR_IQNS as the
# InitiatorName.
# INITIATOR_DISCOVERY_ADDR is the hostname or IP address that will be used
# when issuing a SendTargets discovery request.
#INITIATOR_DISCOVERY_ADDR=""
################################

########## cut/ltp.sh ##########
# LTP_DIR should correspond to the ltp directory tree after make install.
# e.g. LTP_DIR="/opt/ltp"
#LTP_DIR=""
# LTP_AUTORUN_CMD can be set to automatically run one or more testcases from
# within the ltp directory.
# e.g. LTP_AUTORUN_CMD="./runltp"
#LTP_AUTORUN_CMD=""
################################

######## autorun/nvme_tcp_initiator.sh ########
# NVMe over TCP target details used for mapping
#NVME_TARGET_TCP="$VM1_IP_ADDR1"
###############################################
